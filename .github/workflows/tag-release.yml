name: Tag Release (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to tag (X.Y.Z)"
        required: true

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create tag for version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          V="${{ github.event.inputs.version }}"
          TAG="v${V}"
          echo "Preparing tag ${TAG}"
          git fetch origin main --force
          git fetch --tags --force
          if git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
            echo "Tag ${TAG} already exists; nothing to do"
            exit 0
          fi
          # Try to get the PR merge commit for release/vX.Y.Z
          SHA=""
          if command -v gh >/dev/null 2>&1; then
            SHA=$(gh pr list --state merged --base main --search "head:release/${TAG}" --json mergeCommit -q '.[0].mergeCommit.oid' || echo "")
          fi
          if [ -z "$SHA" ]; then
            # Try finding the release commit on main
            SHA=$(git rev-list -n 1 origin/main --grep "^chore(release): ${TAG}$" || true)
          fi
          if [ -z "$SHA" ]; then
            echo "Warning: could not find merge commit for release/${TAG}; tagging origin/main tip"
            SHA=$(git rev-parse origin/main)
          fi
          echo "Tagging ${TAG} at ${SHA}"
          git tag -a "${TAG}" -m "release ${TAG}" "$SHA"
          git push origin "${TAG}"
